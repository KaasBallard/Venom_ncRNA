#!/home/administrator/miniforge3/envs/biopython/bin/python

'''
#### Step 0.6 - Finding BPP 3 and 5 prime UTRs ####
The point of this file was to correctly calculate the start and end locations of the 3'UTR and 5'UTR. This file contains multiple check steps to make sure everything is correct.
The previous step in the pipeline is: Venom_BPP_Best_Blast_Hits_2024-5-13.R (/home/administrator/Documents/Kaas/Venom_ncRNA_project/Scripts/blast/Venom_BPP_Best_Blast_Hits_2024-5-13.R)
The next step in the pipeline is: ShortStack_2024-5-13.sh (/home/administrator/Documents/Kaas/Venom_ncRNA_project/Scripts/ShortStack/ShortStack_2024-5-13.sh).
'''

five_prime_utr = 'GGCGAGCGAATCCGGCTAAGCAGACAAGCGCGGCTTGACCAGACGCTCTTGCGGCAAAGCGCCCGGCTCGACTCGGCTCCGTTCGTCTCAGCGGTCCGCGCCGTCGAGGATTCTCTCGCTCGCTCTCGCTCTCGCTCGCTCGCTCTCTCTGCCGGCGCCTGCGCAGCCCGGG'
three_prime_utr = 'AGCCGTCGAGGACGGCGCGAAGGCGACACCTGGCGGCGGTGAGTGGCGGCGCGCCCGGCCTCAGTGGCTCTTGCGGCGCAATGGGTCTAGCGGCGGGGAGGAGGGGAAAGGAAACGCACGCACGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGAGATCTGGGCCGGGCTGAATCAAGGTCGAGGGTTTCACCTCGGTGGTATCCGAAGCAGAACATCCAGATTCAGTCACCGCTTTGTTCCGTACACTATCAACCTTGTGAACTCTCAAGCTTCCTCCTCCCATTATGTATTCAAGATGAACAGGGATTAATATTTATACACTACTTATATGTCAGGGTGTAGGTCTGTATGTATGTTCTATATAGTATGTTTAAATGTGTGTTATGTAGGTGTACGCTTTGAGAGCAAGCAACTAAATTTCATTTTTAATGTGCGCCGTTGTGCTCACAGTAAAAAAATGACAAAGGTTTATCTACCTACCTACCTACCTACCTACCTACCTCTATCTATCTCTAGCTACTGCATCTATATGTCTATCTGCCTCTATGCCCCCCTCTCATCCTAGCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTATCTCTAGCTACTGCATCTATATCTGTCTATCATCTATCTGCCTCTATGCCCTCTCTCATCCTATCATCTACCTACCTATGTACCTACCTACCTATCTCTACCTATGTCTAGTTACTGCATCTATGTCTATCATCTACCTGCCTCTATGCCCCCCTCATCCTATCTCTCTCTCTCTATCTAACTCTAGCTACTGCATCTATATCTGTCTATCATCTATCTGCCTCTATGCCCCTTCTTTCATCCCCCCCCCTCTTTCATCCCCCCCCCCCTCTCTCTCTCCATCCATCCATCCATCCATTAGAAGGCAGGGCTGTGCCTTTGCGGGTCTGCTGTTTGTCGGGATAGAGAAATTTTAGGGAGGTTGGTGATATGGGGAGGGGGCACTGAAAAGACCTGGGGGGGGGGGCTGAGTGTTCAGACGATGTGATTTTTCCCATTTCCCGAATCTGTTTTCAGGATTCGCACACGATTTATTTACAGGCAGTCCTCGATGTCCCGCCTGCAACGGAGCCCAAAACGTCCGTTGCTAAGTGAGACATTTGTTAAGGTGAATTTTGCCCCATTTTACGACCTTTCGTGCCGCCGTAAATAGGAGTCACTGGCTAAGCATCCAAATTTGGATCGCGTGACTGTGATCAAACTGCATGGTGGTTAAGTGTGGAAAAAATGGTGATGCCGCTTTTTTCAGTGCTGTTGCAACTTAGAACGGTCGTTCAGGGAACTGTTGTAAGTTGAGGATTACCTGTATTTGTTGTTTGTTTATTTGTTTATTAAATTTATTAGCTGCCCATCTCATTGCGAAAGGATTCTGGGACAATGGGACTGTAAAATAATGAACTCGCTAAGGTTTGCCTGGCTGTAAAACTGGAAGGAATCCAAGCTAGGCGTGTTGGGAAGTAGCTGTCAACTGACCTGGGTTAAGTGTATTGTGTGAACAGAGCCTGGGATGGATGGTCCATTATCCTGCCTTCCTTGTAGATGGTAGTGTTGCAGCAGGGAGAGTCCTTGGTGTGTCAGATGATGGACTCTGTAGTTTTTGAGCTACAGAGTGTTGTTCCCGTAAACCTGAGAGTGCACTTGTTAAAACCCGCTGGGAATTCTGGGAGTTGCAGTCCACCCATCTTAAAGTTGCTCAACAACTTTATGATTTTGCAGACCACACAACATTAATTCCTGATTTGGGGCAAGCTCAGATCTGGAACTGATATAAGTTTCTGAGTAGCCAGTTGTGGATGCTTTAACTTTCCCCTTTTTCCCCCTTATTCATAAATTTATTTGCTGCCCATCTCGTATCCAACAACTCCGCCTGGCTTACAGTATAAAAACAGGAACGCAACAAAAATAAAAACAGGAACCCCCAATTGGTCTGTTTCCAGAGCTGAGTAGTTGTGCGAACTGCCAATCCTGATTTTAGTGTGTAAAAACTCTGACTAGAACGCACTGAAGTAAGGAGTCGAGGTTGGCTGTGTTCACATGAAACACTGACCCGGGTTGTATAAACACAGGACTAGCCCTATTGCTGGCACTTCTCCAGTTGTTTGAGTGACAGGTTTAGAGACTGACAACCCAGTCTTCTACACAGGTAGTCCTTAGCTTACGACAGTTCATTTAGTGGCTGAGCAAGGGGTTGGAATAGATGACCTCCAAGGTCCCTTCCAACTTTATTATTTTAGGGACCTATGACCGTGTTTCACACTTACAACCGTTGCAGCAACTCCGCGGTCACGTGATCAAAATTCAGTCCCTTAGCCACTGATTCGTATTTATGACGGTTGTGGCGTCCCGGGATCACACGATCCCCTTTTGCGACCTTCTTACAATTGAAGTCAATGGGGAAGCCAGATTCGCTTAACAACTGCGTCACTAATTTAGCCACACGTTAACAAAGGTGGAAAGAAATGTTGTAAAACGGGGCAAAATTCACCGCCACCGTTTTTTAAATTTATGTACCGCTCCTCCCGGTCAGCCTGCAAGCCTCGTTAAAAACAAGGTGCCAAGCATTAAATACTAAAATCGGAGATTATGAAATAAGGTGGGTTTTTTTAAAAGAAAGAAAAAGAAAGAAAAAGCCAATTTTAAGACAGAACACGCATTTCTCTTAAAAGTGTTCACATTCAAGGCTGGGAGCCCTGCAGCTGGCATAGCCAGCAGGGAAGTTATGTTATAACCTGTTCAATCTCGGTAGGAAAACCCACTGCCAATTTTGCACCAAAACTCTTGATTCTCCCCCACGATCCTCAAACGGAAGCCGATAAAATTTCTCTAGGGCTGGAAGACTCAGTAAGACGGGCTTCCCACCCCAGGAAAAAGGCAGAATTTGGGGTCCCAGACACTTTTCGAGCAATGTCTCAAATCCCAAAACCACAACTGTGCGACAGGGTGGCGCAATTTATTTTTTTTCCCACCCCTTAAAAACAATCCTCCGATTTGGCCTCCATCTGTTTCTGGCTAAATGAGGCACTGGGCGTAATTATAGTCAGCCTGGTTAGCTTTCTAACCAGCCGGCTGGAAAAAGTTTATTTCTCCATTTAAAATAAAATACGTATAAATATATACAGACGGCTTTTGCGAGCGCTTCTTGCACATCTGCTACATAGCAGAGATGGTTCCAGCCCCAAATTGGCGTGAG'
CDS = 'ATGTTCGTCTCCCGCCTGGCGGCCAGCGGGCTGCTGCTCCTGGCCCTGCTGGCGGTCTCGCTCGACGGGAAGCCGGTGCAGCAGTGGTCGCAGAACTGGCCGGCTCCTAAGGTTCCGCCGCTGGTGGTGCAGCAGCGGTCGCAATTGTGGCCGCGTCCTCACGTTCCGCCGCTGGTGGTGCAGCAGCGGTCGCAATTGTGGCCGCGTCCTCACGTTCCGCCGCTGGTGGTGCAGGAGTGGCCGCCGGGTCATCATATTCCGCCGCTAGTGGTGCAGAACTGGAAGTCGCCGACGCAGCTGCAGGCCCGCGAGAGTCCGGCGGGCGGAACGACGGCCTTGCGGGAGGAGCTGAGCCTGGGGCCCGAAGCGGCGCTGGACACCCCGCCTGCTGGACCAGACGTCGGTCCCAGAGGCTCGAAGGCGGCCGCTGCCCCCCAGAGGCTGTCGAAGAGCAAAGGGGCGTCGGCGACCTCGGCGGCGTCGCGGCCGATGCGGGATTTGCGCACCGACGGCAAGCAGGCGCGGCAAAACTGGGGCCGGATGGTGAACCCCGACCACCACTCAGCTGCCGGCGGCGGCGGCGGCGGCGGAGGAGGAGCGCGTCGTCTGAAGGGGCTGGCCAAGAAACGGGCGGGCAACGGCTGCTTCGGCCTCAAGCTCGACCGCATCGGCAGCATGAGCGGCCTGGGCTGCTGA'

five_utr_len = len(five_prime_utr)
print("The length of the 5'UTR is:", five_utr_len)

three_utr_len = len(three_prime_utr)
print("The length of the 3'UTR is:", three_utr_len)

len_cds = len(CDS)
print("The length of the CDS (by the sequence) is:", len_cds)

CDS1_start = 22386
CDS1_end = 22697
CDS2_start = 23141
CDS2_end = 23524

length_of_cds1 = CDS1_end - CDS1_start + 1
length_of_cds2 = CDS2_end - CDS2_start + 1
total_length_of_cds = length_of_cds1 + length_of_cds2

beggining_of_5utr = CDS1_start - five_utr_len
end_of_3utr = CDS2_end + three_utr_len

end_of_5utr = beggining_of_5utr + five_utr_len - 1
beggining_of_3utr = end_of_3utr - three_utr_len + 1 

print("The length of the CDS (by the index) is:", total_length_of_cds)
print("The beggining of the 5'UTR is:", beggining_of_5utr)
print("The end of the 5'UTR is:", end_of_5utr)
print("The beggining of the 3'UTR is:", beggining_of_3utr)
print("The end of the 3'UTR is:", end_of_3utr)